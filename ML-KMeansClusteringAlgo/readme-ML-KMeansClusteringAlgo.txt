You need to following python file to test k-means clustering machine learning algorithm

KMeansClusteringAlgoImpl.py <<data_file>> <<no_of_clusters>> 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. KMeansClusteringAlgoImpl.py 
Run following command to make clusters of datasets.

> python3 KMeansClusteringAlgoImpl.py breast_cancer.data 2

Output will be saved in predlabels.txt file in same directory as KMeansClusteringAlgoImpl.py

Output:
initial labels{0: 1, 1: 0, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 1, 16: 0, 17: 0, 18: 1, 19: 0, 20: 0, 21: 1, 22: 1, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 1, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 1, 62: 0, 63: 1, 64: 0, 65: 1, 66: 0, 67: 1, 68: 1, 69: 1, 70: 0, 71: 1, 72: 0, 73: 0, 74: 1, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 0, 82: 1, 83: 0, 84: 1, 85: 1, 86: 1, 87: 0, 88: 1, 89: 0, 90: 0, 91: 1, 92: 0, 93: 0, 94: 0, 95: 1, 96: 0, 97: 0, 98: 0, 99: 1, 100: 1, 101: 1, 102: 1, 103: 0, 104: 0, 105: 0, 106: 0, 107: 1, 108: 0, 109: 1, 110: 0, 111: 1, 112: 1, 113: 0, 114: 1, 115: 1, 116: 1, 117: 1, 118: 0, 119: 1, 120: 0, 121: 1, 122: 0, 123: 1, 124: 0, 125: 1, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 1, 133: 0, 134: 1, 135: 0, 136: 1, 137: 0, 138: 0, 139: 0, 140: 1, 141: 1, 142: 1, 143: 1, 144: 0, 145: 0, 146: 0, 147: 0, 148: 1, 149: 1, 150: 1, 151: 1, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 1, 160: 1, 161: 1, 162: 0, 163: 1, 164: 1, 165: 1, 166: 1, 167: 0, 168: 0, 169: 1, 170: 1, 171: 0, 172: 0, 173: 1, 174: 1, 175: 0, 176: 0, 177: 1, 178: 0, 179: 0, 180: 0, 181: 1, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 1, 188: 1, 189: 0, 190: 0, 191: 1, 192: 1, 193: 1, 194: 0, 195: 1, 196: 1, 197: 1, 198: 1, 199: 0, 200: 1, 201: 1, 202: 0, 203: 1, 204: 1, 205: 1, 206: 0, 207: 0, 208: 0, 209: 1, 210: 1, 211: 1, 212: 0, 213: 0, 214: 0, 215: 1, 216: 1, 217: 0, 218: 0, 219: 0, 220: 0, 221: 1, 222: 0, 223: 1, 224: 1, 225: 1, 226: 0, 227: 1, 228: 1, 229: 0, 230: 1, 231: 1, 232: 0, 233: 1, 234: 0, 235: 1, 236: 1, 237: 0, 238: 1, 239: 0, 240: 1, 241: 1, 242: 1, 243: 0, 244: 0, 245: 0, 246: 1, 247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 0, 254: 0, 255: 0, 256: 1, 257: 1, 258: 1, 259: 1, 260: 1, 261: 1, 262: 1, 263: 0, 264: 1, 265: 1, 266: 0, 267: 0, 268: 1, 269: 0, 270: 1, 271: 0, 272: 1, 273: 0, 274: 1, 275: 1, 276: 1, 277: 0, 278: 0, 279: 1, 280: 0, 281: 1, 282: 0, 283: 1, 284: 0, 285: 0, 286: 0, 287: 0, 288: 0, 289: 1, 290: 0, 291: 1, 292: 0, 293: 0, 294: 0, 295: 1, 296: 1, 297: 0, 298: 1, 299: 1, 300: 1, 301: 1, 302: 0, 303: 0, 304: 0, 305: 1, 306: 1, 307: 1, 308: 0, 309: 0, 310: 1, 311: 1, 312: 1, 313: 0, 314: 0, 315: 0, 316: 1, 317: 0, 318: 1, 319: 1, 320: 1, 321: 0, 322: 1, 323: 0, 324: 0, 325: 0, 326: 1, 327: 0, 328: 0, 329: 1, 330: 1, 331: 1, 332: 0, 333: 0, 334: 1, 335: 1, 336: 0, 337: 1, 338: 1, 339: 1, 340: 0, 341: 0, 342: 1, 343: 0, 344: 1, 345: 0, 346: 0, 347: 0, 348: 1, 349: 0, 350: 0, 351: 1, 352: 1, 353: 0, 354: 1, 355: 1, 356: 0, 357: 0, 358: 0, 359: 1, 360: 0, 361: 0, 362: 1, 363: 1, 364: 1, 365: 0, 366: 0, 367: 1, 368: 0, 369: 1, 370: 1, 371: 0, 372: 0, 373: 1, 374: 1, 375: 0, 376: 1, 377: 0, 378: 1, 379: 0, 380: 1, 381: 0, 382: 0, 383: 0, 384: 1, 385: 0, 386: 0, 387: 1, 388: 0, 389: 0, 390: 1, 391: 0, 392: 1, 393: 0, 394: 1, 395: 1, 396: 1, 397: 0, 398: 1, 399: 0, 400: 0, 401: 0, 402: 1, 403: 1, 404: 1, 405: 0, 406: 1, 407: 1, 408: 0, 409: 1, 410: 1, 411: 0, 412: 0, 413: 1, 414: 1, 415: 0, 416: 0, 417: 0, 418: 1, 419: 0, 420: 0, 421: 1, 422: 0, 423: 1, 424: 0, 425: 1, 426: 0, 427: 1, 428: 1, 429: 1, 430: 1, 431: 0, 432: 1, 433: 1, 434: 1, 435: 1, 436: 1, 437: 0, 438: 0, 439: 1, 440: 1, 441: 0, 442: 0, 443: 1, 444: 0, 445: 1, 446: 0, 447: 0, 448: 0, 449: 1, 450: 1, 451: 0, 452: 0, 453: 1, 454: 1, 455: 0, 456: 1, 457: 0, 458: 0, 459: 1, 460: 1, 461: 0, 462: 1, 463: 1, 464: 1, 465: 1, 466: 0, 467: 0, 468: 1, 469: 1, 470: 0, 471: 0, 472: 1, 473: 0, 474: 0, 475: 1, 476: 1, 477: 1, 478: 1, 479: 0, 480: 1, 481: 1, 482: 1, 483: 0, 484: 1, 485: 0, 486: 0, 487: 0, 488: 0, 489: 0, 490: 1, 491: 1, 492: 1, 493: 1, 494: 1, 495: 1, 496: 1, 497: 0, 498: 1, 499: 1, 500: 1, 501: 0, 502: 0, 503: 0, 504: 1, 505: 1, 506: 1, 507: 1, 508: 0, 509: 0, 510: 0, 511: 1, 512: 0, 513: 1, 514: 1, 515: 1, 516: 0, 517: 1, 518: 1, 519: 0, 520: 1, 521: 1, 522: 0, 523: 0, 524: 1, 525: 1, 526: 0, 527: 1, 528: 0, 529: 0, 530: 1, 531: 1, 532: 0, 533: 1, 534: 1, 535: 1, 536: 0, 537: 0, 538: 0, 539: 0, 540: 1, 541: 0, 542: 1, 543: 1, 544: 1, 545: 0, 546: 1, 547: 1, 548: 0, 549: 0, 550: 0, 551: 0, 552: 1, 553: 1, 554: 1, 555: 0, 556: 1, 557: 1, 558: 0, 559: 1, 560: 1, 561: 0, 562: 0, 563: 0, 564: 0, 565: 1, 566: 0, 567: 0, 568: 1}
initial kmeans[[14.301444852941177, 19.562352941176464, 93.2464705882353, 673.3680147058824, 0.09759919117647058, 0.10798709558823523, 0.0950858823529412, 0.05148349264705885, 0.18250514705882356, 0.0629466544117647, 0.4263845588235291, 1.2284790441176465, 3.022011397058825, 43.41999264705883, 0.007263602941176471, 0.026983823529411765, 0.03348349264705883, 0.012116544117647066, 0.02080981617647059, 0.0040305514705882345, 16.533143382352947, 25.85091911764706, 109.10533088235296, 909.5683823529414, 0.13387312499999995, 0.26343533088235277, 0.2848273897058824, 0.11787790441176468, 0.29295772058823527, 0.08481327205882348], [13.967797979797979, 19.03989898989898, 90.79912457912458, 637.9656565656566, 0.09522565656565664, 0.10100178451178456, 0.08304191919191918, 0.046570673400673425, 0.17993164983164978, 0.06266111111111108, 0.3857451178451179, 1.2062063973063966, 2.723234343434346, 37.51367003367005, 0.006837003367003373, 0.024099158249158266, 0.030437710437710423, 0.011502626262626249, 0.020297306397306404, 0.003579360269360269, 16.027454545454543, 25.51814814814813, 105.5723232323232, 854.0377104377103, 0.130990707070707, 0.24586666666666673, 0.26061350168350184, 0.11160993265993265, 0.28743602693602704, 0.08315138047138049]]
objDef : inf
objDef : 13856480.161654621
objDef : 2401821.354370147
objDef : 198214.1358947754
objDef : 0.0
--------
Clusters
--------
0 0
0 1
0 2
1 3
0 4
1 5
0 6
1 7
1 8
1 9
............
0 72
1 73
1 74
0 75
1 76
0 77
0 78
1 79
1 80
1 81
0 82
0 83
............
1 214
1 215
1 216
1 217
0 218
0 219
1 220
1 221
1 222
............
1 235
0 236
0 237
1 238
0 239
1 240
1 241
1 242
1 243
0 244
1 245
1 246
1 247
1 248
............
1 397
1 398
1 399
0 400
1 401
1 402
1 403
1 404
1 405
1 406
1 407
0 408
1 409
1 410
1 411
............
1 561
1 562
0 563
0 564
0 565
1 566
0 567
1 568

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2. BalancedError.py
Run following command to check Balanced Error of clusters made using k-means clustering algorithm

> python3 BalancedError.py breast_cancer.labels predlabels.txt

Output:
0.19479678663918398

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Second example

> python3 KMeansClusteringAlgoImpl.py data-hw6.txt 3

Output:
initial labels{0: 1, 1: 2, 2: 2, 3: 2, 4: 2, 5: 0, 6: 0}
initial kmeans[[5.5], [0.0], [2.5]]
objDef : inf
objDef : 0.0
--------
Clusters
--------
1 0
1 1
2 2
2 3
0 4
0 5
0 6

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Third example

> python3 KMeansClusteringAlgoImpl.py data1-hw6.txt 3

Output:
initial labels{0: 2, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 2, 10: 2, 11: 2, 12: 1}
initial kmeans[[6.666666666666667, 6.666666666666667], [35.0, 35.0], [38.25, 38.25]]
objDef : inf
objDef : 0.0
--------
Clusters
--------
0 0
0 1
0 2
0 3
0 4
0 5
1 6
1 7
1 8
2 9
2 10
2 11
2 12

